{"version":3,"sources":["../../src/compoundQuery.ts"],"sourcesContent":["import { BaseQuery, Query } from \"./query.js\";\nimport { Join } from \"./join.js\";\nimport { Select } from \"./select.js\";\nimport { Where, WhereCondition } from \"./where.js\";\n\nexport class CompoundQuery<T extends object, U extends object> implements Query<T & U> {\n  readonly query1: Query<T>;\n  readonly query2: Query<U>;\n  readonly joinInfo: Join<T, U>;\n  constructor(query1: Query<T>, query2: Query<U>, join: Join<T, U>) {\n    this.query1 = query1;\n    this.query2 = query2;\n    this.joinInfo = join;\n  }\n  select(fields: Array<keyof T & U>): Select<T & U>;\n  select(fields: Partial<Record<keyof T | keyof U, string>>): Select<T & U>;\n  select(subquery: Query<any>, alias?: string): Select<T & U>;\n  select(fields: Array<keyof T | keyof U> | Partial<Record<keyof T | keyof U, string>> | Query<any>, alias?: string): Select<T & U> {\n    return new Select<T & U>(this as Query<T & U>, fields, alias);\n  }\n  join<V extends object>(tableName: string, tableAlias?: string): Join<T & U, V> {\n    const newQuery = new BaseQuery<V>(tableName, tableAlias);\n    return new Join<T & U, V>(this, newQuery, 'INNER');\n  }\n\n  innerJoin<V extends object>(tableName: string, tableAlias?: string): Join<T & U, V> {\n    return this.join<V>(tableName, tableAlias);\n  }\n\n  leftJoin<V extends object>(tableName: string, tableAlias?: string): Join<T & U, V> {\n    const newQuery = new BaseQuery<V>(tableName, tableAlias);\n    return new Join<T & U, V>(this, newQuery, 'LEFT');\n  }\n\n  where(conditions: WhereCondition<T & U>): Where<T & U> {\n    return new Where<T & U>(this, conditions);\n  }\n}\n"],"names":["CompoundQuery","select","fields","alias","Select","join","tableName","tableAlias","newQuery","BaseQuery","Join","innerJoin","leftJoin","where","conditions","Where","query1","query2","joinInfo"],"mappings":";;;;+BAKaA;;;eAAAA;;;uBALoB;sBACZ;wBACE;uBACe;;;;;;;;;;;;;;AAE/B,IAAA,AAAMA,gBAAN,MAAMA;IAYXC,OAAOC,MAA0F,EAAEC,KAAc,EAAiB;QAChI,OAAO,IAAIC,cAAM,CAAQ,IAAI,EAAkBF,QAAQC;IACzD;IACAE,KAAuBC,SAAiB,EAAEC,UAAmB,EAAkB;QAC7E,MAAMC,WAAW,IAAIC,gBAAS,CAAIH,WAAWC;QAC7C,OAAO,IAAIG,UAAI,CAAW,IAAI,EAAEF,UAAU;IAC5C;IAEAG,UAA4BL,SAAiB,EAAEC,UAAmB,EAAkB;QAClF,OAAO,IAAI,CAACF,IAAI,CAAIC,WAAWC;IACjC;IAEAK,SAA2BN,SAAiB,EAAEC,UAAmB,EAAkB;QACjF,MAAMC,WAAW,IAAIC,gBAAS,CAAIH,WAAWC;QAC7C,OAAO,IAAIG,UAAI,CAAW,IAAI,EAAEF,UAAU;IAC5C;IAEAK,MAAMC,UAAiC,EAAgB;QACrD,OAAO,IAAIC,YAAK,CAAQ,IAAI,EAAED;IAChC;IA3BA,YAAYE,MAAgB,EAAEC,MAAgB,EAAEZ,IAAgB,CAAE;QAHlE,uBAASW,UAAT,KAAA;QACA,uBAASC,UAAT,KAAA;QACA,uBAASC,YAAT,KAAA;QAEE,IAAI,CAACF,MAAM,GAAGA;QACd,IAAI,CAACC,MAAM,GAAGA;QACd,IAAI,CAACC,QAAQ,GAAGb;IAClB;AAwBF"}